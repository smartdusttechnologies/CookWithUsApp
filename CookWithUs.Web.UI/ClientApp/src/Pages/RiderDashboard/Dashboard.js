import React, { useEffect, useReducer, useState } from 'react';

import { RiderDetail, Orderdetails, OrderList } from "../../services/riderServices";
import { Box, Typography, Grid, Paper } from "@mui/material";
import { useNavigate } from "react-router-dom";


const Dashboard = () => {

    /*const navigate = useNavigate();*/
    /*const { location } = useLocation();*/
    const [riders, setRiders] = useState([]);
    const [isLoading, setLoading] = useState(false);
    const [isOpen, setIsOpen] = useState(false);
    const [processingItems, setprocessingItems] = useState([]);
    const [Historyitem, setHistoryItem] = useState([]);
    const navigate = useNavigate();
    const [refreshKey, setRefreshKey] = useState(0);

    useEffect(() => {
        setLoading(true);
        const UserId = 2;
        OrderList(UserId)
            .then((response) => {
                const processingItems = response.data.filter(item => item.orderStatus === "Processing");
                const historyItems = response.data.filter(item => item.orderStatus !== "Processing");

                setprocessingItems(processingItems);
                setHistoryItem(historyItems);
                // Handle response here
            })
            .catch((error) => {
                // Handle error here
            });
    }, [refreshKey]);
   
    
    const handleGetRiders = (latitude, longitude) => {
        setLoading(true);
        RiderDetail(latitude, longitude)
            .then((response) => {


                setRiders(response.data);
                console.log(riders);
                setLoading(false);

            })
            .catch((error) => {
                setLoading(false);
            });
    };
    //const recentOrders = [
    //    {
    //        itemName:'Pizza',
    //        time: '1:30 PM',
    //        location: '123 Main St',
    //        restaurant: 'Burger King',
    //        status: 'preparing',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg'
    //    },
    //    {
    //        items: [
    //            { name: 'Pizza' },
    //            { name: 'Garlic Bread' },
    //            { name: 'Soda' }
    //        ],
    //        time: '7:00 PM',
    //        location: '456 Elm St',
    //        restaurant: 'Pizza Hut',
    //        status: 'prepared',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg'
    //    },
    //    // Add more recent orders here if needed
    //];

    //const items = [
    //    {
    //        id: 1,
    //        name: 'Burger',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg',
    //        time: '12:30 PM',
    //        status: 'Delivered'
    //    },
    //    {
    //        id: 2,
    //        name: 'Pizza',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg',
    //        time: '1:45 PM',
    //        status: 'Cancelled'
    //    },
    //    {
    //        id: 3,
    //        name: 'Sushi',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg',
    //        time: '7:00 PM',
    //        status: 'Delivered'
    //    },
    //    {
    //        id: 4,
    //        name: 'Salad',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg',
    //        time: '6:15 PM',
    //        status: 'Delivered'
    //    },
    //    {
    //        id: 5,
    //        name: 'Pasta',
    //        image: 'https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg',
    //        time: '8:30 PM',
    //        status: 'Cancelled'
    //    }
    //];
    const toggleBox = () => {

        if (!isOpen) {
            getRiderLocation();

        }
        setIsOpen(!isOpen);

    };


    const getRiderLocation = () => {
        navigator.geolocation.getCurrentPosition((position) => {
            handleGetRiders(
                position?.coords?.latitude,
                position?.coords?.longitude
            );
        });
    };




    const handleCancel = () => {
        const orderdetail = {
            // ID: "", // Omit if autogenerated by backend
            RiderId: riders.id,
            
            OrderDateTime: new Date(), // Provide a valid DateTime value
            Latitude: riders.userLatitude,
            Longitude: riders.userLongitude,
            OrderStatus: "Cancelled",
        };
        
        Orderdetails(orderdetail)
            .then((response) => {
               
                setRefreshKey(prevKey => prevKey + 1);
                /*window.location.reload();*/


            })
            .catch((error) => {
                setLoading(false);
            });
        setIsOpen(false); // Close the box when cancel button is clicked
    };

    const handleItemClick = (orderId) => {
        // Navigate to the details page with the orderId
        navigate(`/livelocationmap/${orderId}`);
    };
    const handleAccept = () => {
        setIsOpen(false);
        const orderdetail = {
            // ID: "", // Omit if autogenerated by backend
            RiderId: riders.id,
            
            OrderDateTime: new Date(), // Provide a valid DateTime value
            Latitude: riders.userLatitude,
            Longitude: riders.userLongitude,
            OrderStatus: "Processing",
        };
        setLoading(true);
        Orderdetails(orderdetail)
            .then((response) => {
                setRefreshKey(prevKey => prevKey + 1);
              
               

            })
            .catch((error) => {
                setLoading(false);
            });

        // Add your accept logic here
    };

    return (

       
        <>  <div className="App">
            <button onClick={toggleBox}>{isOpen ? 'Close' : 'Open'}</button>
            {isOpen && (
                <div style={boxStyle}>
                    <h2>Riders</h2>
                    <ul>

                        <li key={riders.id}>
                            <p>Name: {riders.name}</p>
                            <p>Age: {riders.age}</p>
                            <p>Mobile No: {riders.mobileNo}</p>
                            <p>Distance: {riders.distance} Km</p>
                            <div>
                                <button onClick={handleCancel}>Reject</button>
                                <button onClick={handleAccept} style={{ marginLeft: '10px' }}>Accept</button>
                            </div>
                        </li>

                    </ul>
                </div>
            )}
        </div>
            <Box p={3}>
                <Typography variant="h4" gutterBottom>
                    Running Order
                </Typography>
                <Grid container spacing={3}>
                    {processingItems.map(processingItem => (
                        <Grid item key={processingItem.id} xs={12} sm={6} md={4} lg={3}>
                            <Paper elevation={3} sx={{ padding: 2 }} onClick={() => handleItemClick(processingItem.id)} style={{ cursor: 'pointer' }}>

                                <img src='https://wallpaperaccess.com/full/767042.jpg 'alt={processingItem.name} style={{ width: '100%', height: 'auto', marginBottom: 10 }} />
                                <Typography variant="h6" gutterBottom>
                                    {/*{processingItem.orderName}*/}Food
                                </Typography>
                                <Typography variant="body2" gutterBottom>
                                    Time: {processingItem.orderDateTime}
                                </Typography>
                                <Typography variant="body2" gutterBottom>
                                    Status: {processingItem.orderStatus}
                                </Typography>
                            </Paper>
                        </Grid>
                    ))}
                </Grid>
            </Box>
            <Box p={3}>
                <Typography variant="h4" gutterBottom>
                    Order History
                </Typography>
                <Grid container spacing={3}>
                    {Historyitem.map(Historyitems => (
                        <Grid item key={Historyitems.id} xs={12} sm={6} md={4} lg={3}>
                            <Paper elevation={3} sx={{ padding: 2 }}>
                                <img src='https://buy.am/media/image/fd/f0/e3/Classic-Classic-Burger_600x600@2x.jpg' alt={Historyitems.name} style={{ width: '100%', height: 'auto', marginBottom: 10 }} />
                                <Typography variant="h6" gutterBottom>
                                    {/*{Historyitems.orderName}*/}Food
                                </Typography>
                                <Typography variant="body2" gutterBottom>
                                    Time: {Historyitems.orderDateTime}
                                </Typography>
                                <Typography variant="body2" gutterBottom>
                                    Status: {Historyitems.orderStatus}
                                </Typography>
                            </Paper>
                        </Grid>
                    ))}
                </Grid>
            </Box>
        </>
    );

};
const boxStyle = {

    position: 'fixed',
    top: '10%',
    left: '10%',
    right: '10%',
    bottom: '10%',
    backgroundColor: 'rgba(240 227 227 / 93%)',
    display: 'flex',
    justifyContent: 'center',
    alignItems: 'center',
    flexDirection: 'column',
    padding: '20px',

};
export default Dashboard;
